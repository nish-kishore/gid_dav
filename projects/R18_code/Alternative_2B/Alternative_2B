#### R18: Alternative Version 2B travelers to and from US as the horizontal axis ####

#Author: Erin Goucher

#### Install and Load R Packages ####
required.packages <- c("tidyverse", "AzureStor", "Microsoft365R", "readxl", "janitor", "scales", 
                       "devtools", "dplyr", "stringr", "ggbeeswarm", "ggrepel", "scales")

packages.to.install <- setdiff(required.packages, installed.packages())
if (length(packages.to.install) > 0) install.packages(packages.to.install)

# Load libraries
library(tidyverse)
library(readxl)
library(AzureStor)
library(Microsoft365R)
library(janitor)
library(ggplot2)
library(ggrepel)
library(dplyr)
library(stringr)
library(ggbeeswarm)
library(scales)

#### General Formatting ####
#Define Priority Countries 
priority_country_names <- c("Afghanistan", "Pakistan", "Nigeria", "Ethiopia", 
                            "Democratic Republic of the Congo", "Indonesia", "Philippines", "Brazil")

#Define Color Palette 
color_pal_9 <- c(
  "Afghanistan" = "#A51D42",
  "Brazil" = "#D5006D",
  "Democratic Republic of the Congo" = "#007B7A",
  "Ethiopia" = "#00A266",
  "Indonesia" = "#582D90",
  "Nigeria" = "#334A54",
  "Pakistan" = "#D76B6E",
  "Philippines" = "#A76DAB",
  "Other Country" = "#afabab"
)

#Sort Priority Countries in alphabetical order for legend 
sorted_priority_names <- sort(names(color_pal_9)[names(color_pal_9) != "Other Country"])

#### X axis data  ####
#Read in traveler to the US data
data_trvlr_in <- sirfunctions::edav_io(io = "read", default_dir = "GID/GIDMEA/giddatt", 
                                    file_loc = "data_clean/traveler_outbound.rds")
#### Summarize Traveler Data
data_trvlr_in <- data_trvlr_in %>% 
  filter(year >= 2019 & year <= 2023)

#Read in traveler out of the US data
data_trvlr_out <- read_excel("C:/Users/tqa4/OneDrive - CDC/Summer 2022/EPMPs/DATT Visuals/international_air_travelers_04.10.25.xlsx")

#### Filter Traveler Data for year
data_trvlr_out <- data_trvlr_out %>% 
  filter(year >= 2019 & year <= 2023)

# Standardize country capitlization 
data_trvlr_out$ctry <- stringr::str_to_title(tolower(data_trvlr_out$ctry ))

#Replaces NAs and missings to 0s(only foreign arrivials and US departures)
data_trvlr_out <- data_trvlr_out %>%
  mutate(across(
    c(us_departures),
    ~ {
      clean_vals <- gsub(",", "", trimws(.))
      clean_vals[clean_vals %in% c("", "..", "-", "NA", "<5")] <- "0"
      val_numeric <- as.numeric(clean_vals)
      replace(val_numeric, is.na(val_numeric), 0)  # final replacement
    }
  ))

#Convert columns to numeric (only foreign arrivials and US departures)
data_trvlr_out <- data_trvlr_out %>%
  mutate(
    us_departures = as.numeric(us_departures)
  )

#Join traveler datasets
data_trvlr <- data_trvlr_in %>%
  full_join(data_trvlr_out, by = c("ctry", "year")) 

#Summarize travel data for total travelers
data_trvlr <- data_trvlr %>%
  group_by(ctry, year) %>%
  summarize(
    count = sum(count + us_departures, na.rm = TRUE),
    .groups = "drop"
  )

#### Size data (Measles Case Data)####
# Read in Data from ADLS 
dataset_vpd <- sirfunctions::edav_io(io = "read", default_dir = "GID/GIDMEA/giddatt", 
                                     file_loc = "data_clean/country_vpd_year_casedata.rds")
# Filter for Years 2019-2023 
dataset_vpd <- dataset_vpd %>% 
  filter(year >= 2019 & year <= 2023)

#Filter for VPD cases only 
dataset_vpd <- dataset_vpd %>% 
  filter(variable == "cases")

#Filter for Measles cases only 
dataset_vpd <- dataset_vpd %>% 
  filter(vpd == "Measles")

#### Y axis data ####
dataset_import <- read_excel("C:/Users/tqa4/OneDrive - CDC/Summer 2022/EPMPs/DATT Visuals/mr_import_01_24 1.xlsx")

# Standardize country capitlization 
dataset_import$country <- stringr::str_to_title(tolower(dataset_import$country))

#### Join vpd and trvlr data ####
joined_data <- dataset_vpd %>%
  full_join(data_trvlr, by = c("country_name" = "ctry", "year")) 

#### Sum relevant columns ####
data_summary <- joined_data %>%
  group_by(country_name) %>%
  summarize(
    total_travelers_to_US = sum(count, na.rm = TRUE),
    total_measles_cases = sum(value, na.rm = TRUE)
  )

# Join size/import data 
data_full_summary <- data_summary %>%
  full_join(dataset_import, by =c("country_name" = "country")) 

#### Clean data ####
data_full_summary_clean <- data_full_summary %>%
  filter(total_travelers_to_US != 0, total_measles_cases != 0, mr_im_13_24 !=0)


#### Graph ####
# Define axis limits
y_limits <- c(min(data_full_summary_clean$total_travelers_to_US, na.rm = TRUE) * 0.9, 
              max(data_full_summary_clean$total_travelers_to_US, na.rm = TRUE) * 1.1)
x_limits <- c(min(data_full_summary_clean$mr_im_13_24, na.rm = TRUE) * 0.9, 
              max(data_full_summary_clean$mr_im_13_24, na.rm = TRUE) * 1.1)

beeswarm_plot <- ggplot(data = data_full_summary_clean) +
  
  # Non-priority countries (gray)
  geom_point(
    data = data_full_summary_clean %>% filter(!country_name %in% priority_country_names),
    aes(y = total_travelers_to_US, x = mr_im_13_24, size = total_measles_cases),
    color = "#afabab",
    alpha = 0.4,
    show.legend = FALSE
  ) +
  
  # Priority countries
  geom_point(
    data = data_full_summary_clean %>% filter(country_name %in% priority_country_names),
    aes(y = total_travelers_to_US, x = mr_im_13_24, size = total_measles_cases, color = country_name),
    alpha = 1,
    show.legend = TRUE
  ) +
  
  # Philippines — totally isolated
  geom_point(
    data = data_full_summary_clean %>% filter(country_name == "Philippines"),
    aes(y = total_travelers_to_US, x = mr_im_13_24, size = total_measles_cases, color = country_name),
    alpha = 1,
    stroke = 1.2,
    show.legend = FALSE
  ) +
  
  # Scales
  scale_y_log10(
    labels = scales::comma_format(),
    breaks = scales::trans_breaks("log10", function(x) 10^x)
  ) +
  scale_x_continuous(
    limits = c(1, 60),
    breaks = c(1, 10, 20, 30, 40, 50, 60),
    labels = scales::number_format(accuracy = 1)
  ) +
  scale_color_manual(
    name = "Priority Countries",
    values = color_pal_9,
    breaks = sort(priority_country_names),
    guide = guide_legend(
      order = 2,
      override.aes = list(size = 7)  # You can bump this up or down to taste
    )
  ) +
  scale_size_continuous(
    name = "Total Number of Measles Cases (2019–2023)",
    range = c(3, 20),
    trans = "sqrt",
    breaks = c(10, 100, 1000, 10000, 100000),
    labels = scales::comma_format(),
    guide = guide_legend(
      override.aes = list(size = c(6, 8, 10, 13, 16))# manually tweak these
    )
  )+ 
  
  
  # Coordinates and labels
  coord_cartesian(ylim = y_limits, xlim = c(1, 60)) +
  labs(
    y = "Total Travelers To and From the US (2019-2023)",
    x = "Number of Measles Cases Imported to the US (2013-2024)",
    title = "Imported Measles Cases (2014-2023) vs. Travelers to the US and from the US (2019-2023)\nBubble Size = Total Number of Measles Cases (2019-2023)"
  ) +
  theme_minimal() +
  theme(
    axis.text = element_text(size = 12, face = "bold"),
    axis.title = element_text(size = 14, face = "bold"),
    legend.title = element_text(size = 10, face = "bold"),
    legend.text = element_text(size = 12),
    legend.position = "right",
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank()
  )

print(beeswarm_plot)

# Save plot
ggsave(
  filename = file.path("C:/Users/tqa4/OneDrive - CDC/Summer 2022/EPMPs/DATT Visuals/Alternative2B",
                       "R18_Alternative_2B.png"),
  width = 13, height = 8, dpi = 300, bg = "white"
)



